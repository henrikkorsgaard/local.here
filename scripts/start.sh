#!/bin/bash
path=$1
configFile=${path}/config/webstrate-pi.config

# Checking if configuration file exist in /boot
if [ -r /boot/webstrate-pi.config ]; then
	echo "Reading configuraton from /boot/webstrate-pi.config"
	configFile='/boot/webstrate-pi.config'
fi

# Sourcing configuration file
source $configFile

# Checking if configuration files is sufficient
if [[ "$server" == "" || "$login" == "" || "$password" == "" || "$webstrate" == "" || "$port" == "" || "$ssid" == "" || "$wifi_password" == "" ]]
then
	echo "Error reading configuration file!"
	exit
fi

echo $webstrate > /etc/hostname

# Setting up wlan link
if [ -n "$(iw dev wlan0 link | grep $ssid)" ]
then
	echo "Wlan0 is already setup and running on $ssid"
else
	echo "Updating network configuration"
	wpa_passphrase $ssid $wifi_password > /etc/wpa_supplicant/wpa_supplicant.conf
	sudo /etc/init.d/networking restart
	ifup wlan0
	sleep 5
fi

# Setting up monitor device for tspark
if [ -n "$(ifconfig | grep mon0)" ];then
	echo "Monitor device (mon0) already up!"
else
	echo "Setting up monitor device (mon0)"
	sudo iw wlan0 interface add mon0 type monitor
	sudo ip link set mon0 up
fi

# Getting device ip
ip="$(ifconfig wlan0 | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*')"
# Getting station broadcast ip
broadcastIP="$(ifconfig wlan0 | grep -Eo ' (Bcast:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*')"
# Getting device mac
mac="$(ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}')"
# Getting station IP
stationIP="$(arp -a| grep $ssid | grep -Eo -m 1 '([0-9]*\.){3}[0-9]*')"
# Getting station mac
stationMAC="$(iw dev wlan0 link | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}')"
# Getting OS version
os="$(cat /proc/version)"
# Getting CPU details
cpu="$(cat /proc/cpuinfo | grep model | grep -o ":.*" | cut -f2- -d':')"
# Getting USB peripherals
usb="$(lsusb | sed "s/.*/\"&\"/" | paste -sd,)"
usb="[$usb]"

# Checking essential values and generating configuration file
if [ -z "$ip" ]
then
	echo "Error getting essential device information. Are you sure wlan is set up and has an ip?"
	exit
elif [ -z "$broadcastIP" ]
then
	echo "Error getting essential device information. Missing broadcast ip?"
	exit
elif [ -z "$mac" ]
then
	echo "Error getting essential device information. Missing mac address?"
	exit
elif [ -z "$stationIP" ]
then
	echo "Error getting essential device information. Unable to obtain station ip."
	exit
elif [ -z "$stationMAC" ]
then
	echo "Error getting essential device information. Unable to obtain station mac."
	exit
else
	echo "Generating the local settings and writing to file: webstrate-pi-local.settings"
	echo "{\"ATTENTION\":\"THIS SETTINGS FILE IS AUTO-GENERATE BY THE STARTUP SCRIPT AND SHOULD NOT BE EDITED\", \"server\": \"$server\", \"login\": \"$login\",\"password\": \"$password\", \"webstrate\": \"$webstrate\", \"ssid\": \"$ssid\", \"ip\": \"$ip\", \"port\": \"$port\", \"mac\": \"$mac\", \"broadcastIP\": \"$broadcastIP\", \"stationIP\": \"$stationIP\", \"stationMAC\": \"$stationMAC\", \"os\":\"$os\", \"peripherals\":$usb, \"cpu\":\"$cpu\"}" > ${path}/config/autogenerated.config
fi
